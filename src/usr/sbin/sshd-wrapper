#!/usr/bin/env bash

set -e

function __cleanup ()
{
	__delete_lock
}

function __create_lock ()
{
	if [[ -n ${lock_file} ]]
	then
		touch "${lock_file}"
	fi
}

function __delete_lock ()
{
	if [[ -e ${lock_file} ]]
	then
		rm -f "${lock_file}"
	fi
}

function __get_options ()
{
	local -r options="${1}"

	printf -- \
		'-D -e -u 0%s%s' \
		"${options:+" "}" \
		"${options}"
}

function main ()
{
	local -r bin="/usr/sbin/sshd"
	local -r bootstrap_state_file="/var/lib/misc/sshd-bootstrap"
	local -r bootstrap_timeout="4"
	local -r lock_file="/var/lock/subsys/sshd-wrapper"
	local -r nice="/bin/nice"
	local -r niceness="10"
	local -r timed_out_with_no_events="2"

	local options
	local verbose="false"

	while [[ "${#}" -gt 0 ]]
	do
		case "${1}" in
			-v|--verbose)
				verbose="true"
				shift 1
				;;
		esac
	done

	if [[ -e ${lock_file} ]]
	then
		>&2 printf -- \
			'ERROR: %s lock detected - aborting\n' \
			"${0##*/}"
		exit 1
	fi

	trap __cleanup \
		EXIT INT TERM
	__create_lock

	options="$(
		__get_options
	)"

	if [[ ${verbose} == true ]]
	then
		printf -- \
			'INFO: %s waiting on %s\n' \
			"${0##*/}" \
			"${bootstrap_state_file##*/}"
	fi

	until [[ -e ${bootstrap_state_file} ]]
	do
		set +e
		inotifywait \
			-qq \
			-t ${bootstrap_timeout} \
			-e "create" \
			"${bootstrap_state_file%/*}"

		if [[ ${?} -eq ${timed_out_with_no_events} ]]
		then
			break
		fi
		set -e
	done

	if ! [[ -e ${bootstrap_state_file} ]]
	then
		>&2 printf -- \
			'ERROR: %s timed out - aborting %s\n' \
			"${bootstrap_state_file##*/}" \
			"${0##*/}"
		exit 1
	fi

	if [[ ${verbose} == true ]]
	then
		printf -- \
			'INFO: %s starting %s\n' \
			"${0##*/}" \
			"${bin##*/}"
	fi

	__cleanup
	trap - \
		EXIT INT TERM

	exec ${nice} \
		-n ${niceness} \
		${bin} \
		${options}
}

main "${@}"
